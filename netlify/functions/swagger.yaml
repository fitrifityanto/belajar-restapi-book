openapi: 3.0.0
info:
  title: Book API
  description: API untuk mengelola data buku menggunakan Express.js dan MongoDB
  version: 1.0.0
  contact:
    name: Book API Support
servers:
  - url: https://book-api-express-mongodb.netlify.app
    description: Production Server
  - url: http://localhost:8888 #port for netlify dev
    description: Development Server

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: API Key diperlukan untuk mengakses endpoint

  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
          description: ID unik buku
          example: "64a7b8c9d1234567890abcde"
        judul:
          type: string
          description: Judul buku
          example: "Belajar Node.js"
        penulis:
          type: string
          description: Nama penulis buku
          example: "John Doe"
        tahun:
          type: string
          description: Tahun terbit buku
          example: "2023"
        deskripsi:
          type: string
          description: Deskripsi singkat buku
          example: "Panduan lengkap belajar Node.js untuk pemula"
      required:
        - judul
        - penulis

    BookInput:
      type: object
      properties:
        judul:
          type: string
          description: Judul buku
          example: "Belajar Node.js"
        penulis:
          type: string
          description: Nama penulis buku
          example: "John Doe"
        tahun:
          type: string
          description: Tahun terbit buku
          example: "2023"
        deskripsi:
          type: string
          description: Deskripsi singkat buku
          example: "Panduan lengkap belajar Node.js untuk pemula"
      required:
        - judul
        - penulis

    SuccessResponse:
      type: object
      properties:
        message:
          type: string
          example: "berhasil menambah buku"

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "error menerima data"

    DeleteAllResponse:
      type: object
      properties:
        message:
          type: string
          example: "5 buku berhasil dihapus!"

security:
  - ApiKeyAuth: []

paths:
  /api/books:
    get:
      summary: Mendapatkan semua data buku
      description: Mengambil daftar semua buku yang tersimpan dalam database
      tags:
        - Books
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: Berhasil mendapatkan data buku
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        "401":
          description: API Key tidak valid atau tidak ada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    post:
      summary: Menambah buku baru
      description: Menambahkan data buku baru ke dalam database
      tags:
        - Books
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookInput"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/BookInput"
      responses:
        "200":
          description: Berhasil menambah buku
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: Data tidak valid (judul kosong)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "judul tidak boleh kosong!"
        "401":
          description: API Key tidak valid atau tidak ada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      summary: Menghapus semua buku
      description: Menghapus semua data buku dari database
      tags:
        - Books
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: Berhasil menghapus semua buku
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAllResponse"
        "401":
          description: API Key tidak valid atau tidak ada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/books/{id}:
    get:
      summary: Mendapatkan buku berdasarkan ID
      description: Mengambil data buku spesifik berdasarkan ID
      tags:
        - Books
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID buku yang akan diambil
          schema:
            type: string
            example: "64a7b8c9d1234567890abcde"
      responses:
        "200":
          description: Berhasil mendapatkan data buku
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "404":
          description: Buku tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "data buku id 64a7b8c9d1234567890abcde tidak ada"
        "401":
          description: API Key tidak valid atau tidak ada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    put:
      summary: Mengupdate buku berdasarkan ID
      description: Mengubah data buku yang sudah ada berdasarkan ID
      tags:
        - Books
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID buku yang akan diupdate
          schema:
            type: string
            example: "64a7b8c9d1234567890abcde"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookInput"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/BookInput"
      responses:
        "200":
          description: Berhasil mengubah data buku
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "data buku berhasil diubah"
        "400":
          description: Data tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "data yang akan diubah tidak boleh kosoong"
        "404":
          description: Buku tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "gagal mengubah data buku, mungkin data buku tidak ada"
        "401":
          description: API Key tidak valid atau tidak ada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      summary: Menghapus buku berdasarkan ID
      description: Menghapus data buku spesifik berdasarkan ID
      tags:
        - Books
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID buku yang akan dihapus
          schema:
            type: string
            example: "64a7b8c9d1234567890abcde"
      responses:
        "200":
          description: Berhasil menghapus buku
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "data buku berhasil dihapus."
        "404":
          description: Buku tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "data buku id 64a7b8c9d1234567890abcde gagal di hapus, mungkin data tidak ada"
        "401":
          description: API Key tidak valid atau tidak ada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "data buku tidak bisa dihapus"

tags:
  - name: Books
    description: Operasi CRUD untuk data buku
